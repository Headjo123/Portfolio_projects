<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/PHILP KANNEH/Desktop/Covid_Data.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8497"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/><expanded_item id="4" parent="1"/></tab_structure><tab_browse><current_table name="4,27:mainPercentPopulationVaccinated"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="4" mode="1"/></sort><column_widths><column index="1" value="70"/><column index="2" value="70"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="84"/><column index="6" value="80"/><column index="7" value="152"/><column index="8" value="92"/><column index="9" value="88"/><column index="10" value="160"/><column index="11" value="161"/><column index="12" value="157"/><column index="13" value="229"/><column index="14" value="169"/><column index="15" value="165"/><column index="16" value="237"/><column index="17" value="128"/><column index="18" value="88"/><column index="19" value="165"/><column index="20" value="101"/><column index="21" value="178"/><column index="22" value="157"/><column index="23" value="234"/><column index="24" value="170"/><column index="25" value="247"/><column index="26" value="77"/><column index="27" value="81"/><column index="28" value="180"/><column index="29" value="176"/><column index="30" value="149"/><column index="31" value="248"/><column index="32" value="95"/><column index="33" value="110"/><column index="34" value="98"/><column index="35" value="128"/><column index="36" value="130"/><column index="37" value="165"/><column index="38" value="124"/><column index="39" value="196"/><column index="40" value="220"/><column index="41" value="222"/><column index="42" value="257"/><column index="43" value="273"/><column index="44" value="119"/><column index="45" value="77"/><column index="46" value="132"/><column index="47" value="86"/><column index="48" value="105"/><column index="49" value="105"/><column index="50" value="110"/><column index="51" value="122"/><column index="52" value="160"/><column index="53" value="144"/><column index="54" value="113"/><column index="56" value="154"/><column index="57" value="197"/><column index="58" value="110"/><column index="59" value="185"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="74"/><column index="3" value="73"/><column index="4" value="76"/><column index="5" value="124"/><column index="6" value="182"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQLcovid&amp;">SELECT *
FROM CovidDeaths
WHERE continent is not NULL
ORDER by 3,4 

SELECT *
FROM CovidVaccinations
ORDER by 3,4 

-- Data to be used 
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER by 1, 2

-- Total cases compared to total deaths
-- Shows likehood of dying if infected with covid in Africa 
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM CovidDeaths
WHERE location like '%Africa%'
ORDER by 1, 2

-- Total cases against population
-- Shows what percentage of the poopulation contracted Covid
SELECT location, date, total_cases, population, (total_cases/population)*100 as 'PopulationInfected(%)'
FROM CovidDeaths
WHERE location like '%Africa%'
ORDER by 1, 2
 
-- A measure of total infection rate per country.
SELECT location, max(total_cases), population, max((total_cases/population))*100 as Population_Rate_Infected_per_country
FROM CovidDeaths
GROUP by location, population
ORDER by Population_Rate_Infected_per_country desc 

-- Countries with the highest death count per population.
SELECT location, max(total_deaths) as Death_count_per_country
FROM CovidDeaths
WHERE continent is not NULL
GROUP by location
ORDER by Death_count_per_country desc 

-- Total Death count per continent(correct values)
SELECT location, max(total_deaths) as Death_count_per_continent
FROM CovidDeaths
WHERE continent is NULL
GROUP by location
ORDER by Death_count_per_continent desc 

-- For the sake of drill down effect in tableau to come out correctly. (somewhat inaccurate values)
SELECT continent, max(total_deaths) as Death_count_per_continent
FROM CovidDeaths
WHERE continent is not NULL
GROUP by continent
ORDER by Death_count_per_continent desc 


-- GLOBAL NUMBERS
SELECT date, sum(new_cases) as total_cases, sum(new_deaths), sum(new_deaths)/sum(new_cases)*100 as DeathPercentage
FROM CovidDeaths
WHERE continent is not null
GROUP by date
ORDER by 4 desc

-- Totsl cases, total deaths and percentage of infected who died (globally)
SELECT sum(new_cases) as total_cases, sum(new_deaths), sum(new_deaths)/sum(new_cases)*100 as DeathPercentage
FROM CovidDeaths
WHERE continent is not null
ORDER by 1, 2

-- Covid vaccinations Data.
SELECT *
FROM CovidVaccinations

-- Looking at total population vs vaccinations  
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	on dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent is not NULL
ORDER by 2,3 

-- Looking at the total number of vaccinations given per country.
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER by dea.location, dea.date)
as Rolling_vaccination_values
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	on dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent is not NULL
ORDER by 2,3 

-- In order to get the percent of people in a country that were vaccinated, I need to utilize the rolling_vaccination_values column. But this will give an error, so i'll use a CTE
WITH PopvsVacc ( Continent, Location, Date, Population, Newvaccinations, Rolling_vaccination_values)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER by dea.location, dea.date)
as Rolling_vaccination_values
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	on dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent is not NULL
-- ORDER by 2,3 
)
SELECT*, (Rolling_vaccination_values/population) *100 as Vaccination_percentage
FROM PopvsVacc

-- Temp TABLE
DROP TABLE if EXISTS temp.PercentPopulationVaccinated; --to avoid errors while modifying
CREATE TABLE temp.PercentPopulationVaccinated
(
Continent TEXT (255),
Location TEXT (255),
Date date ,
Population REAL,
Newvaccinations NUMERIC,
Rolling_vaccination_values NUMERIC
)

INSERT INTO temp.PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER by dea.location, dea.date)
as Rolling_vaccination_values
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	on dea.location = vac.location
	AND dea.date = vac.date
--WHERE dea.continent is not NULL
-- ORDER by 2,3 

SELECT*, (Rolling_vaccination_values/population) *100 as Vaccination_percentage
FROM temp.PercentPopulationVaccinated

-- Creating views for Later Visualizations.
CREATE VIEW PercentPopulationVaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER by dea.location, dea.date)
as Rolling_vaccination_values
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	on dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent is not NULL
-- ORDER by 2,3 
</sql><current_tab id="0"/></tab_sql></sqlb_project>
